<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLimpiar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAOlJREFUSEvtjzEOAUEYhbcR0TqDhI7OLTiAjoJGSaUTBQUXoHIBGifgDhRcgI5K
        CO/9QyKbMf8QEpH9ki/Zt3lvZjf4NS43v0Z0gUp0gcpHL+jAA7wf+sw9bMOXyEHbYS6z0JsK5GgsyQ07
        7JYledKDHLUkuWGH3a4kT6aQo1ecQG9W0HaIyyX0IgaP8AwTfKEQhyfIDbcqGcgvWkvyYwO5SUtSKEKW
        Z5LsJGHKPArsclOQpNCELPclGcIH5mHdPAoDyE1DksIIslyVZAgfWIKPf1iD3AwlKSwgy+84hyo7aBv7
        uIV/RRBcASmPgGKJ4FyKAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnReiniciar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAbVJREFUSEutlslKxEAQhkdRcD140avbk7g9i8tTqA8wV5eLePfsAoo3ry4IXgRx
        OQjqScQF1O+LyZDMZJKJmR8+Jt1UV3W6q2pS+Yc6wt/CGoShOgYgrhP4hHvYh0UYgVzNw08KOxDXFjxB
        3OYVVqF+MwnNwSVcwws0CxCpB2ZgDT5A2wsYg0yNwgPkBYhLp4eg/WM4TlUfXIGGp+FvKwFUF3h8rvFN
        Uo9rBTRwN1Phc6sBVDccgev0ldAwvME7TMAkmC1VKKJx8E68+ER2LYCR14PRnzTw1YtqA/RlCtd0AE5O
        B6NymgV97QWjUDfgZG8wKid96Os2GKFO8LwtoHbpGb5A37UATrZLFqs+gwDqDr7BCi2rhiNSNq52X/Ju
        MAq1BE7aW8oqSlNTvyZz3uKw0HIbVoYs0qjQLN6EbLlGtlVY9kXlmmPQx7IT9bJB2ag0sHEVCaLtNrj2
        DPohVR6PLVdDG5e9JU8eS7Rz19ryM2WQc3CB5+mlmRnxKvfZuU2I/nDcea7zSL6iLdfLcnGExSjxOW08
        86bHkiWzy65oTluMVqf47Jyp2JAtZeQnS4HPlkrlF5muf0YPGaeOAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnCerrar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAMFJREFUSEvtlUEKwjAQReNRBF14EEuxJ1JPpBt7proVxb2i/8MkhGmnodFutA8e
        tD8zSWlK4yaGUsIzfGXaQM5hwoKuxiFyDhNflEuy//cWmMMLZLZjIOwhsytcMBB0f4uugjV8wCfcqPsK
        xmQtQOInprxmprH6A1bBDB6gHz9JprH6A1YBJztCP15LprH6A1bBqK+ogPGmfnWTl/AGmW0ZCPxkmd3h
        ioGg+1skCxL8wQKj/655WHyyCHt7D5wJhXNveBegZSnoJIoAAAAASUVORK5CYII=
</value>
  </data>
</root>